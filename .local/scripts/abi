# !/usr/bin/env bash

set -e

if ! which curl 2>&1 >/dev/null; then
    echo "Please install 'curl' first"
    exit 1
fi

if ! which jq 2>&1 >/dev/null; then
    echo "Please install 'jq' first"
    exit 1
fi

smartcontract="$1"
dir="."
apikey="123"
date=$(TZ="GMT" date +"%Y%m%d%H%M%S")
# put inside the () the etherscan sidechain sub domain name
blockchain=("" "goerly")

declare -A _address
declare -A _blockchain
declare -A _bclink
declare -A _chainId
declare -A _link
declare -A _name
declare -A _name2
declare -A _proxy
declare -A _addressproxy
declare -A _verify
declare -A _addressproxyverify

[[ $smartcontract =~ ^0x[0-9a-fA-F]{40}$ ]] || {
    echo
    echo -e "\e[38;5;198m    üôÖ‚Äç‚ôÄÔ∏è Invalid smart contract address.\e[0m"
    echo
    exit 1
}
echo -e "\e[38;5;51m  üßë‚Äçüé§ Valide smart contract address.\e[0m"
echo

for i in "${blockchain[@]}"; do
    chain="$i"
    url="https://api${chain}.etherscan.io/api?module=contract&action=getsourcecode&address=${smartcontract}&apikey=${apikey}"
    res=$(curl -s $url)

    [[ $res =~ ^{"status":"1",*} ]] || {

        if [[ $chain == "" ]]; then
            _blockchain="mainnet"
            _bclink=""
            _chainId="1"
        else
            _blockchain="${chain:1}"
            _bclink="${chain:1}"
            _chainId="4"
        fi

        isproxy="$(jq -r '.result[].Proxy' <<<$res)"
        name="$(jq -r '.result[].ContractName' <<<$res)"
        implementation=$(jq -r '.result[].Implementation' <<<$res)
        abi=$(jq -r '.result[].ABI' <<<$res)
        source=$(jq -r '.result[].SourceCode' <<<$res)

        if [[ $source != "" ]]; then
            echo -e "\e[38;5;83m  üöÄ - deployed on $_blockchain \e[0m"
            _link="https://${_bclink}.etherscan.io/address/${smartcontract}"
            _address=$smartcontract
        else
            echo -e "\e[38;5;245m  üí¢ - not deployed on $_blockchain \e[0m"
            _link=""
            _address=""
        fi

        if [[ $abi != "" ]]; then
            _verify=true
        else
            _verify=false
        fi

        if [[ $isproxy == "0" && $name != "" ]]; then
            _name=$name
            _description=hello
            _proxy=false
            _addressproxy=""
            _addressproxyverify=""
            _abi=$abi

            JSON_STRING=$(jq -n \
                --arg n "$_name" \
                --arg d "$_description" \
                --arg bc "$_blockchain" \
                --arg ci "$_chainId" \
                --arg a "$smartcontract" \
                --arg v "$_verify" \
                --arg p "$_proxy" \
                --arg ap "$_addressproxy" \
                --arg apv "$_addressproxyverify" \
                --arg l "$_link" \
                --argjson abi $_abi \
                '{name: $n,description: $d, blockchain: $bc, chainId: $ci, address: $a, addressIsVerified: $v, isProxy: $p, addressProxy: $ap, addressProxyIsVerified: $apv, link: $l, abi: $abi}')
            rm -rf ./$dir/${_name}_${_blockchain}_*.json
            echo $JSON_STRING >./$dir/${_name}_${_blockchain}_${date}.json
            echo -e "\n\e[38;5;227m  ‚ôªÔ∏è  Saved into ./$dir/${_name}_${_blockchain}_*.json\e[0m\n"

        else
            if [[ $isproxy == "1" && $name != "" ]]; then
                echo -e "\n\e[38;5;227m  üïµ  Proxy for ${implementation}\e[0m"

                url2="https://api${chain}.etherscan.io/api?module=contract&action=getsourcecode&address=${implementation}&apikey=${apikey}"
                res2=$(curl -s $url2)

                [[ $res2 =~ ^{"status":"1",*} ]] || {

                    name2="$(jq -r '.result[].ContractName' <<<$res2)"
                    abi2=$(jq -r '.result[].ABI' <<<$res2)

                    _description=hello
                    _proxy=true
                    _addressproxy=$smartcontract
                    _abi=$abi2

                    if [[ $abi2 != "" ]]; then
                        _addressproxyverify=true
                    else
                        _addressproxyverify=false
                    fi

                    JSON_STRING=$(jq -n \
                        --arg n "$name2" \
                        --arg d "$_description" \
                        --arg bc "$_blockchain" \
                        --arg ci "$_chainId" \
                        --arg a "$implementation" \
                        --arg v "$_addressproxyverify" \
                        --arg p "$_proxy" \
                        --arg ap "$_addressproxy" \
                        --arg apv "$_verify" \
                        --arg l "$_link" \
                        --argjson abi $abi2 \
                        '{name: $n,description: $d, blockchain: $bc, chainId: $ci, address: $a, addressIsVerified: $v, isProxy: $p, addressProxy: $ap, addressProxyIsVerified: $apv, link: $l, abi: $abi}')
                    rm -rf ./$dir/${name2}_${_blockchain}_*.json
                    echo $JSON_STRING >./$dir/${name2}_${_blockchain}_${date}.json
                    echo -e "\n\e[38;5;227m  ‚ôªÔ∏è  Saved into ./$dir/${name2}_${_blockchain}_*.json\e[0m\n"
                }
            fi
        fi
    }
done
